Configuration of the environment:Step 1: Create your own virtual environment:
conda create -n new_name python=3.10
Step 2: Enter your virtual environment:
conda activate new_name
Step 3:
conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch-nightly -c nvidia
pip install ultralytics -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install torchsummary -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install lightning -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install onnx==1.14.0 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install onnxruntime==1.15.1 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install pycocotools==2.0.7 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install PyYAML==6.0.1 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install scipy==1.13.0 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install onnxsim==0.4.36 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install onnxruntime-gpu==1.18.0 -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install timm==1.0.7 thop efficientnet_pytorch==0.7.1 einops grad-cam==1.4.8 dill==0.3.6 albumentations==1.4.11 pytorch_wavelets==1.3.0 tidecv PyWavelets -i https://pypi.tuna.tsinghua.edu.cn/simple 
pip install -U openmim -i https://pypi.tuna.tsinghua.edu.cn/simple 
mim install mmengine -i https://pypi.tuna.tsinghua.edu.cn/simple 
mim install "mmcv>=2.0.0" -i https://pypi.tuna.tsinghua.edu.cn/simple
Build the dataset:
Store the dataset according to the following path and modify the label names in the data.yaml file.
path: E:\yolov11\datasets\data 
train: E:\yolov11\datasets\data\images\train  
val: E:\yolov11\datasets\data\images\val 
test: E:\yolov11\datasets\data\images\test
Train the dataset:
Select the model configuration file and dataset configuration file in train.py, then start training.
The configuration file determines the network structure of the model. Our custom-designed network configuration files are located at \yolov11\ultralytics\cfg\models\addv11.
All loss functions used in the experiment can be modified in \yolov11\ultralytics\utils\loss.py.
Comparative experiments on CIoU, GIoU, DIoU, SIoU, EIoU, and Shape-IoU can be configured in loss.py. Set the desired loss function to True to activate it.
All introduced modules are located in \yolov11\ultralytics\nn\newsAddmodules\.
Run val.py for validation and predict.py for testing.
For ablation experiments, select the corresponding configuration file in \yolov11\ultralytics\cfg\models\addv11. The configurations are pre-defined, and you only need to specify the correct file path in the training script.
The comparative experiment uses MMDetection. Detailed tutorials can be found at https://mmdetection.readthedocs.io/zh-cn/latest/user_guides/index.html.
